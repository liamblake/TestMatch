# Runs all required checks of any code being committed to the main branch
name: code checks

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Boost (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -yq libboost-all-dev

      - name: Install Boost (macOS)
        if: runner.os == 'macOS'
        run: brew install boost

      - name: Create build environment
        run: mkdir build

      - name: Create makefiles (Linux)
        if: runner.os == 'Linux'
        run: cmake -Bbuild -H. -DBUILD_TESTS=ON

      - name: Create makefiles (masOS)
        if: runner.os == 'macOs'
        run: cmake -Bbuild -H. -DBOOST_ROOT=/usr/local/Cellar/boost -DBUILD_TESTS=ON

      - name: Build
        run: cmake --build build/ --target all

      - name: Run unit tests
        run: cd build && ctest --verbose

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install package and dependencies
        run: python -m pip install -e .[dev]

      - name: Create test file directory
        run: mkdir -p testfiles

      - name: Run Python tests
        run: pytest

  linter:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: DoozyX/clang-format-lint-action@v0.12
        with:
          source: "src include"
          extensions: "h,cpp"
          clangFormatVersion: 11
          exclude: test/* extern/*

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install package and dependencies
        run: python -m pip install -e .[dev]

      - name: Lint with flake8
        run: flake8 src/testmatch

      - name: Lint with black
        run: black --check src/testmatch

      - name: Type checking with mypy
        run: mypy src/testmatch
